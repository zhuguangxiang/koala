
package std

class InnerArray<T> {
    var len int
    var arr [T; len]

    func __init__(len int) {
        self.len = len

    }
}

class Array<T> {
    var __inner__ [T]
    var size int
    var len int

    func __init__() {
        size = 32
        __inner__ = [T; len]
    }

    func __set_item__(idx int, val T) __inline__ {
        if (idx >= len) panic("!!overflow!!");
        __inner__[idx] = T
    }

    func append(val T) {
        __inner__
    }


    func length() int { return len; }
}

arr := Array<int>()
arr[0] = 100

arr := [int]
arr.length()
arr[0] = 100
